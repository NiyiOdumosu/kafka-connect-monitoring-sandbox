---
version: '3.4'
services:
  # Data Stores
  ## RabbitMQ
  rabbitmq1:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

  # Connectors
  ## Kafka Connect cluster
  connect1:
    image: confluentinc/cp-kafka-connect:${CP_VERSION}
    ports:
      - 8083:8083
      - 5083:5083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: $CCLOUD_BOOTSTRAP_SERVERS
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: demo-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: demo-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: demo-connect-status
      CONNECT_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_PARTITIONS: 3

      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule   required username=\"$CCLOUD_API_KEY\"   password=\"$CCLOUD_API_SECRET\";"
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"

      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_PORT: 8083
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: $CCLOUD_SR_URL
      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "$CCLOUD_SR_API_KEY:$CCLOUD_SR_API_SECRET"

      # Connect producer
      CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule   required username=\"$CCLOUD_API_KEY\"   password=\"$CCLOUD_API_SECRET\";"
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_REQUEST_TIMEOUT_MS: "20000"
      CONNECT_PRODUCER_RETRY_BACKOFF_MS: "500"
      # Connect consumer
      CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule   required username=\"$CCLOUD_API_KEY\"   password=\"$CCLOUD_API_SECRET\";"
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_REQUEST_TIMEOUT_MS: "20000"
      CONNECT_CONSUMER_RETRY_BACKOFF_MS: "500"

      CONNECT_PLUGIN_PATH: /usr/share/java,/connector-plugins
      KAFKA_OPTS: "-javaagent:/opt/prometheus-jmx-exporter/jmx_prometheus_javaagent.jar=5083:/opt/prometheus-jmx-exporter/kafka-connect.yaml"
    volumes:
      - ./prometheus-jmx-exporter:/opt/prometheus-jmx-exporter
      - ./connector-plugins:/connector-plugins
      - ./aws/credentials:/root/.aws/credentials
      - ./aws/config:/root/.aws/config

  # CICD
  topology-builder:
    image: purbon/kafka-topology-builder:latest
    command: /bin/bash
    stdin_open: true
    tty: true
    volumes:
      - ./topologies:/topologies

  # Monitoring
  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - 3000:3000
    volumes:
      - ./grafana/:/etc/grafana/provisioning/
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/config/:/etc/prometheus/
  ccloud_exporter:
    image: dabz/ccloudexporter
    environment:
      CCLOUD_USER: ${CCLOUD_EXPORTER_API_KEY}
      CCLOUD_PASSWORD: ${CCLOUD_EXPORTER_API_SECRET}
    command: -cluster ${CCLOUD_CLUSTER}