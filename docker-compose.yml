---
version: '3.4'
services:
  # Data Stores
  # Connectors

  ## Kafka Connect cluster Pointed to Confluent Cloud
  ## Kafka Connect cluster
  connect1:
    image: confluentinc/cp-kafka-connect:${CP_VERSION}
    container_name: connect1
    ports:
      - 8084:8084
      - 5083:5083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: $CCLOUD_BOOTSTRAP_SERVERS
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: demo-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: demo-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: demo-connect-status
      CONNECT_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_PARTITIONS: 3

      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule   required username=\"$CCLOUD_API_KEY\"   password=\"$CCLOUD_API_SECRET\";"
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"

      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_PORT: 8084
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: $CCLOUD_SR_URL
      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "$CCLOUD_SR_API_KEY:$CCLOUD_SR_API_SECRET"

      # Connect producer
      CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule   required username=\"$CCLOUD_API_KEY\"   password=\"$CCLOUD_API_SECRET\";"
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_REQUEST_TIMEOUT_MS: "20000"
      CONNECT_PRODUCER_RETRY_BACKOFF_MS: "500"
      # Connect consumer
      CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule   required username=\"$CCLOUD_API_KEY\"   password=\"$CCLOUD_API_SECRET\";"
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_REQUEST_TIMEOUT_MS: "20000"
      CONNECT_CONSUMER_RETRY_BACKOFF_MS: "500"
      KAFKA_CONNECT_CUB_KAFKA_TIMEOUT: "1"
      # connect logs

      CONNECT_PLUGIN_PATH: /usr/share/java,/connector-plugins
      KAFKA_OPTS: "-javaagent:/opt/prometheus-jmx-exporter/jmx_prometheus_javaagent.jar=5083:/opt/prometheus-jmx-exporter/kafka-connect-v2.yml"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.host=127.0.0.1 -Dcom.sun.management.jmxremote.port=5084 -Dcom.sun.management.jmxremote.rmi.port=5084 -Dcom.sun.management.jmxremote.local.only=false"
    volumes:
      - ./prometheus-jmx-exporter:/opt/prometheus-jmx-exporter
      - ./connector-plugins:/connector-plugins



  # CICD
  julie-ops:
    image: purbon/kafka-topology-builder:latest
    container_name: julie-ops
    command: /bin/bash
    stdin_open: true
    tty: true
    volumes:
      - ./topologies:/topologies

  # Local database
  mysql:
    image: mysql
    hostname: mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: changeme
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: changeme
      MYSQL_ROOT_HOST: 172.%  # Allow docker containers to connect to mysql
    ports:
      - 3306:3306
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql #persistent mysql db data

  # Monitoring
  grafana:
    image: grafana/grafana
    container_name: grafana
#    environment:
#      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/etc/grafana/provisioning/

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus-jmx-exporter:/etc/prometheus

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    ports:
      - 9095:9095
    volumes:
      - ./alertmanager:/etc/alertmanager
