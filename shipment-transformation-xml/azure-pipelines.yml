# Trigger builds on commits to master:
trigger:
  - master
# Also trigger builds on pull requests from any branch:
pr:
  branches:
    include:
      - '*'

# Default build environment image for all jobs/stages:
pool:
  vmImage: 'ubuntu-20.04'

variables:
  KEY_VAULT_CONNECTED_SERVICE_NAME: InfoAXS-KeyVault
  KEY_VAULT_NAME: InfoAxsKeyVault
  KEY_VAULT_SECRETS_FILTER_SHARED_SERVICES: |
    INFOAXS-SHARED-SERVICES-AWS-ACCESS-KEY-ID,INFOAXS-SHARED-SERVICES-AWS-SECRET-ACCESS-KEY
  AWS_REGION: eu-west-1

stages:
  - stage: DockerBuild
    jobs:
      - job: 'docker_build'
        displayName: Docker Build
        condition: always()
        steps:
          # See https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-key-vault?view=azure-devops
          - task: AzureKeyVault@1
            inputs:
              connectedServiceName: $(KEY_VAULT_CONNECTED_SERVICE_NAME)
              keyVaultName: $(KEY_VAULT_NAME)
              # comma separated list, or wildcard, of secrets to fetch
              secretsFilter: $(KEY_VAULT_SECRETS_FILTER_SHARED_SERVICES)
              # expose the secrets to all tasks in the job, not just subsequent ones
              runAsPreJob: true
          - script: |
              AWS_ACCESS_KEY_ID=$(INFOAXS-SHARED-SERVICES-AWS-ACCESS-KEY-ID)
              echo "##vso[task.setvariable variable=AWS_ACCESS_KEY_ID]$AWS_ACCESS_KEY_ID"

              AWS_SECRET_ACCESS_KEY=$(INFOAXS-SHARED-SERVICES-AWS-SECRET-ACCESS-KEY)
              echo "##vso[task.setvariable variable=AWS_SECRET_ACCESS_KEY]$AWS_SECRET_ACCESS_KEY"
            displayName: set-up-credentials
          - bash: |
              ./docker.sh build
            displayName: docker-build
          - bash: |
              ./docker.sh deploy
            displayName: docker-push